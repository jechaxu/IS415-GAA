{
  "hash": "1fca64651d4f85c1f9d82dc2b876b35e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"hands on exercise 10\"\nauthor: \"Jenna Cheo\"\ndate: \"October 27, 2024\"\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  freeze: true\n  eval: false\n---\n\n\n\n# Getting Started\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n```\n:::\n\n\n\n# Geospatial Data Wrangling\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n```\n:::\n\n\n\n## Updating CRS information\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_svy21 <- st_transform(mpsz, 3414)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz_svy21)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_bbox(mpsz_svy21) #view extent\n```\n:::\n\n\n\n## Aspatial Data Wrangling\n\n### Importing the aspatial data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(condo_resale)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(condo_resale)\n```\n:::\n\n\n\n### Converting aspatial data frame into a sf object\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(condo_resale.sf)\n```\n:::\n\n\n\n## Exploratory Data Analysis (EDA)\n\n### EDA using statistical graphics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n```\n:::\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\n\nStatistically, the skewed dsitribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called *LOG_SELLING_PRICE* by using a log transformation on the variable *SELLING_PRICE*. It is performed using `mutate()` of **dplyr** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n```\n:::\n\n\n\n### Multiple Histogram Plots distribution of variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n```\n:::\n\n\n\n### Drawing Statistical Point Map\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"view\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_options(check.and.fix = TRUE) +\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +1\n  tm_view(set.zoom.limits = c(11,14))\n```\n:::\n\n\n\nNotice that [`tm_dots()`](https://www.rdocumentation.org/packages/tmap/versions/2.2/topics/tm_symbols) is used instead of `tm_bubbles()`.\n\n## Hedonic Pricing Modelling in R\n\n### Simple Linear Regression Method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(condo.slr)\n```\n:::\n\n\n\nThe artificial R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\n\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of *SELLING_PRICE*.\n\nThe **Coefficients:** section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n```\n:::\n\n\n\n### Multiple Linear Regression Method\n\n#### Visualising the relationships of the independent variables\n\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as **multicollinearity** in statistics.\n\nCorrelation matrix is commonly used to visualise the relationships between the independent variables. Beside the `pairs()` of R, there are many packages support the display of a correlation matrix. In this section, the [**corrplot**](https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html) package will be used.\n\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in *condo_resale* data.frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n```\n:::\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the *angular order of the eigenvectors* method suggested by [Michael Friendly](https://www.datavis.ca/papers/corrgram.pdf).\n\nFrom the scatterplot matrix, it is clear that ***Freehold*** is highly correlated to ***LEASE_99YEAR***. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, ***LEASE_99YEAR*** is excluded in the subsequent model building.\n\n### Building a hedonic pricing model using multiple linear regression method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n```\n:::\n\n\n\n### Preparing Publication Quality Table: olsrr method\n\nNot all the independent variables are statistically significant. We will remove those variables not statistically significant.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n```\n:::\n\n\n\n### Preparing Publication Quality Table: gtsummary method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_regression(condo.mlr1, intercept = TRUE)\n```\n:::\n\n\n\nmodel statistics can be included in the report by either appending them to the report table by using [`add_glance_table()`](https://www.danieldsjoberg.com/gtsummary/reference/add_glance.html) or adding as a table source note by using [`add_glance_source_note()`](https://www.danieldsjoberg.com/gtsummary/reference/add_glance.html) as shown in the code chunk below\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n```\n:::\n\n\n\n#### Checking for multicollinearity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nols_vif_tol(condo.mlr1)\n```\n:::\n\n\n\nSince the VIF of the independent variables are less than 10. We can safely conclude that there are no sign of multicollinearity among the independent variables.\n\n#### Test for Non-Linearity\n\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nols_plot_resid_fit(condo.mlr1)\n```\n:::\n\n\n\nThe figure above reveals that most of the data poitns are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n#### Test for Normality Assumption\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nols_plot_resid_hist(condo.mlr1)\n```\n:::\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nols_test_normality(condo.mlr1)\n```\n:::\n\n\n\n#### Testing for Spatial Autocorrelation\n\nIn order to perform spatial autocorrelation test, we need to convert *condo_resale.sf* from sf data frame into a **SpatialPointsDataFrame**.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %>%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"view\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n```\n:::\n\n\n\nTo prove that our observation is indeed true, the Moran’s I test will be performed\n\nFirst, we will compute the distance-based weight matrix by using [`dnearneigh()`](https://r-spatial.github.io/spdep/reference/dnearneigh.html) function of **spdep**.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n```\n:::\n\n\n\nNext, [`nb2listw()`](https://r-spatial.github.io/spdep/reference/nb2listw.html) of **spdep** packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\\\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n```\n:::\n\n\n\nNext, [`lm.morantest()`](https://r-spatial.github.io/spdep/reference/lm.morantest.html) of **spdep** package will be used to perform Moran’s I test for residual spatial autocorrelation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm.morantest(condo.mlr1, nb_lw)\n```\n:::\n\n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\n\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}