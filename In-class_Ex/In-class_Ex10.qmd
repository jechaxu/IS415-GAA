---
title: "in class exercise 10"
format: html
editor: visual
execute: 
  freeze: true
  eval: false
---

# Getting Started

```{r}
pacman::p_load(olsrr, ggstatsplot, sf,tmap, tidyverse, gtsummary, performance, see, sfdep)
```

```{r}
condo_resale <- read_csv("data/Condo_resale_2015.csv")

mpsz <- read_rds("data/rds/mpsz.rds")

condo_resale_sf <- read_rds("data/rds/condo_resale_sf.rds")
```

# Correlation Analysis

```{r}
ggcorrmat(condo_resale[, 5:23])
```

```{r}
condo_mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + 
                  AGE   + PROX_CBD + PROX_CHILDCARE + 
                  PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + 
                  PROX_HAWKER_MARKET    + PROX_KINDERGARTEN + 
                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + 
                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + 
                  PROX_SUPERMARKET + PROX_BUS_STOP + 
                  NO_Of_UNITS + FAMILY_FRIENDLY + 
                  FREEHOLD + LEASEHOLD_99YR, 
                data=condo_resale_sf)

summary(condo_mlr)
```

generating tidy linear regression report

```{r}
ols_regress(condo_mlr)
```

Variable selection

stepwise regression

forward stepwise

```{r}
condo_fw_mlr <- ols_step_forward_p(
  condo_mlr,
  p_val = 0.05,
  details = FALSE)
condo_fw_mlr
```

backward step

```{r}
condo_bw_mlr <- ols_step_backward_p(
  condo_mlr,
  p_val = 0.05,
  details = FALSE)
condo_bw_mlr
```

stepwise

```{r}
condo_sb_mlr <- ols_step_both_p(
  condo_mlr,
  p_val = 0.05,
  details = FALSE)
condo_sb_mlr
```

# Model Selection

```{r}
metric <- compare_performance(condo_mlr, 
                    condo_fw_mlr$model,
                    condo_bw_mlr$model,
                    condo_sb_mlr$model)
```

```{r}
metric$Name <- gsub(".*\\\\([a-zA-Z0-9_]+)\\\\, \\\\model\\\\.*", "\\1", metric$Name)
```

```{r}
plot(metric)
```

# Visualizing Model Parameters

```{r}
ggcoefstats(condo_sb_mlr$model,
            sort = "ascending")
```

VIF measures how much variance of estimated regr coeffs is inflated compared to when pred vars are not linearly related

```{r}
check_collinearity(condo_sb_mlr$model)
```

```{r}
plot(check_collinearity(condo_sb_mlr$model)) +
  theme(axis.text.x = element_text(
    angle = 45, hjust = 1))
```

## Linearity assumption test

```{r}
out <- plot(check_model(condo_sb_mlr$model, 
                        panel = FALSE))
out[[2]]
```

the r/s btwn the dep var and indep. vars are linear

## Normality assumption test

```{r}
plot(check_normality(condo_sb_mlr$model))
```

residual resembles normal distribution

## Checking outliers

```{r}
outliers <- check_outliers(condo_sb_mlr$model,
                           method = "cook")
outliers
```

```{r}
plot(check_outliers(condo_sb_mlr$model,
                           method = "cook"))
```

# Spatial Non-stationary Assumption

H0: residuals are randomly distributed

H1: residuals are spatially non stationary

```{r}
mlr_output <- as.data.frame(condo_fw_mlr$model$residuals) %>%
  rename(`FW_MLR_RES` = `condo_fw_mlr$model$residuals`)
```

```{r}
condo_resale_sf <- cbind(condo_resale_sf, 
                        mlr_output$FW_MLR_RES) %>%
  rename(`MLR_RES` = `mlr_output.FW_MLR_RES`)
```

```{r}
tmap_mode("view")
tm_shape(mpsz)+
  tmap_options(check.and.fix = TRUE) +
  tm_polygons(alpha = 0.4) +
tm_shape(condo_resale_sf) +  
  tm_dots(col = "MLR_RES",
          alpha = 0.6,
          style="quantile") 
tmap_mode("plot")
```

# Spatial stationary test

```{r}
condo_resale_sf <- condo_resale_sf %>%
  mutate(nb = st_knn(geometry, k=6,
                     longlat = FALSE),
         wt = st_weights(nb,
                         style = "W"),
         .before = 1)
```

```{r}
global_moran_perm(condo_resale_sf$MLR_RES, 
                  condo_resale_sf$nb, 
                  condo_resale_sf$wt, 
                  alternative = "two.sided", 
                  nsim = 99)
```
