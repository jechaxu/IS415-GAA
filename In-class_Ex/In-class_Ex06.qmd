---
title: "In Class Exercise 6"
author: "Jenna Cheo"
date: "September 23, 2024"
date-modified: "last-modified"
format: html
editor: visual
execute: 
  freeze: true
  eval: false
---

# Getting Started

```{r}
pacman::p_load(sf, tmap, sfdep, tidyverse)
```

```{r}
hunan <- st_read(dsn = "data",
                 layer = "Hunan")
```

```{r}
hunan2012 <- read_csv("data/Hunan_2012.csv")
```

```{r}
hunan <- left_join(hunan,hunan2012)%>%
  select(1:4, 7, 15)
```

derivings queens contiguity

```{r}
wm_q <- hunan %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb,
                         style = "W"),
         .before=1)
```

```{r}
moranI <- global_moran(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt)

glimpse(moranI)
```

Performing Global Moran's I test

```{r}
global_moran_test(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt)
```

Performing Global Moran'I permutation test

```{r}
set.seed(1234)
```

```{r}
global_moran_perm(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt,
                  nsim = 99)
```

```{r}
lisa <- wm_q %>% 
  mutate(local_moran = local_moran(
    GDPPC, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_moran)
```

```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("ii") + 
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8)) +
  tm_layout(main.title = "local Moran's I of GDPPC",
            main.title.size = 0.8)
```

```{r}
lisa_sig <- lisa  %>%
  filter(p_ii < 0.05)
tmap_mode("plot")
tm_shape(lisa) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
tm_shape(lisa_sig) +
  tm_fill("mean") + 
  tm_borders(alpha = 0.4)
```

```{r}
wm_idw <- hunan %>%
  mutate(nb = st_contiguity(geometry),
         wts = st_inverse_distance(nb, geometry,
                                   scale = 1,
                                   alpha = 1),
         .before = 1)
```

```{r}
HCSA <- wm_idw %>% 
  mutate(local_Gi = local_gstar_perm(
    GDPPC, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_Gi)
HCSA
```

```{r}
#| eval: false
# HCSA_sig <- HCSA %>%
#  filter(p_sim < 0.05)
# tmap_mode("plot")
#tm_shape(HCSA) +
#  tm_polygons() +
#  tm_borders(alpha = 0.5) +
#tm_shape(HCSA_sig) +
#  tm_fill("gi_star") +
#  tm_borders(alpha = 0.4)
```
