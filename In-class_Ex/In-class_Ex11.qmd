---
title: "in class ex 11"
author: "Jenna Cheo"
date: "November 4, 2024"
date-modified: "last-modified"
format: html
editor: visual
---

## Getting Started

```{r}
pacman::p_load(sf, tmap, tidyverse, httr, performance)
```

```{r}
folder_path <- "data"
file_list <- list.files(path = folder_path,
                        pattern = "^realis.*\\.csv$",
                        full.names = TRUE)

realis_data <- file_list %>%
  map_dfr(read_csv)

condo_resale <- realis_data %>%
  mutate(`Sale Date` = dmy(`Sale Date`)) %>%
  filter(`Type of Sale` == "Resale" &
          `Property Type` == "Condominium")
```

```{r}
postcode <- unique(condo_resale$`Postal Code`)
```

```{r}
url <- "https://onemap.gov.sg/api/common/elastic/search"
found <- data.frame()
not_found <- data.frame()

for (postcode in postcode) {
  query <- list('searchVal'=postcode, 'returnGeom'='Y',
                'getAddrDetails'='Y', 'pageNum' = '1')
  res <- GET(url, query=query)
  if ((content(res)$found) != 0) {
    found <- rbind(found, data.frame(content(res))[4:13])
  } else {
     not_found = data.frame(postcode)
     }
}
```

```{r}
found <- found %>%
  select(c(6:8)) %>%
  rename(POSTAL = `results.POSTAL`,
         XCOORD = `results.X`,
         YCOORD = `results.Y`)
```

```{r}
condo_resale_geocoded = left_join(
  condo_resale, found,
  by = c('Postal Code' = 'POSTAL')
)
```

```{r}
condo_resale_sf <- st_as_sf(condo_resale_geocoded,
                            coords = c("XCOORD",
                                       "YCOORD"),
                            crs = 3414)
```

```{r}
overlapping_points <- condo_resale_sf %>%
  mutate(overlap = lengths(st_equals(., .)) > 1)
```

```{r}
condo_resale_sf <- condo_resale_sf %>%
  st_jitter(amount = 2)
```

geospatial points can overlap! remember to jitter if there are any duplicates/overlaps.

